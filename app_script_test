# This script is a simplified version of the application simulation process.
# Mauricio A. Valle

library(shiny)
library(ggplot2)
ret <- read.csv('anualsp500Returns.csv') # data of annual returns of the sp500
# - -  - - - 
# Function to calculate the final value of the pension and the total return

sim_pension <- function(S0, Sy, m, ret) {
  pension <- numeric(length=0L)
  pension <- c(pension, S0)
  for ( t in c(2:m)) {
    # pick a random return from ret
    i <- sample(1:length(ret), 1, replace = FALSE)
    retorno <- ret[ i ]
    S <-  (pension[t-1] + Sy) * (1+retorno) 
    pension <- c(pension, S)
    # print(pension)
  }
  final_value <- pension[length(pension)]
  savings_return <- (pension[length(pension)] - S0)/S0
  return(list(final_value = final_value, savings_return = savings_return))
}
# - -  - - - 
# - -  - - - 
# function to make many simulations

sim_pension2 <- function(n=10000, S0, Sy, m, ret) {
  pension_value <- numeric(length=0L)
  return_savings <- numeric(length=0L)
  for ( i in 1:n) {
    x <- sim_pension(S0 = S0, Sy = Sy, m = m, ret= ret)
    pension_value <- c(pension_value, as.numeric( x$final_value) )
    return_savings <- c(return_savings, as.numeric( x$savings_return) )
  }
  return(list(pension_value  = pension_value, return_savings = return_savings   ))
}
# - -  - - - 
# - -  - - - 

# simulations:
S0=1
Sy=0
m=10
sim_result <- sim_pension2(S0 = 1, Sy = 0, m = 10, ret = ret$x )
pension_value_df <- as.data.frame(sim_result$pension_value)
#print(sim_result$pension_value)
# Render the histogram
      ggplot(pension_value_df, aes(x=sim_result$pension_value))+ 
        geom_histogram(binwidth=0.03,colour = "grey") + 
        geom_vline(aes(xintercept = (S0+m*Sy)), colour="red")+
        geom_vline(aes(xintercept = median(sim_result$pension_value)), colour="lightgreen")+
        #scale_x_continuous(breaks=seq(-2.5,2.5,0.5))+ 
        guides(fill=FALSE) +
        theme_bw() + 
        ggtitle("Distribution of Final Investments") +
        xlab("Final Investments") + ylab("Frequency") +
        theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

      
    # Calculate additional information
prob_savings_less_equal_S0 <- 100 * sum(sim_result$pension_value <= (S0+m*Sy) ) / length(sim_result$pension_value)
median_pension_value <- median(sim_result$pension_value)
mean_return_savings <- 100 * mean(sim_result$return_savings)
annual_return_savings <- median( (sim_result$pension_value - sum(S0+m*Sy) ) / sum(S0+m*Sy))
    

cat(" Probability having less than all your investments:", round(prob_savings_less_equal_S0, 2), "%\n")
cat("Median of your final savings :", round(median_pension_value, 2), "\n")
cat("Ratio final savings - investments:", round(median_pension_value/(S0+m*Sy),2  ))
